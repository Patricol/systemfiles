#CHECK THIS NOTE SYNCED BEFORE REFORMATTING
also ensure that the systemfiles repo is up to date etc.
and check that duplicati is working http://localhost:8200

adjust these notes etc. so I have a nice list of everything I need to do in preparation of doing a full reinstall like this.

Even though using an installer for Arch is tempting as a way to abstract away the hardware and any partitioning etc, I should stick with manual installs so that I can be certain of exactly what has or has not been done to the system. That makes troubleshooting issues much easier, etc.

Note that the earliest committed version of the script has a lot more explanation about why certain things are done; or why certain packages are installed, etc.

move excess files from /home folders onto nas before doing this; if needed/desired. probably also delete cache folders.
also sudo baobab to check other folders for important things. VM images can be created outside of /home automatically etc.
also should probably close all programs so chrome etc aren't in use.
make backups like:
sudo tar -cvf /arch-homes.tar /home/
extract them like:
sudo tar --same-owner -xvpf arch-homes.tar


boot into archiso login.

Follow https://wiki.archlinux.org/index.php/Installation_guide or install.txt to match this to hardware etc. if needed.

#RUN WITH ONLY ONE HDD CONNECTED, AND ONLY IF ENTIRE HDD CAN BE USED.
#time how long this takes, to aid future decisions about when it's faster to nuke from orbit.
#Check that you booted in UEFI mode:
efivar --list
#Check you're connected to the internet:
ping -c 1 1.1.1.1
timedatectl set-ntp true
fdisk -l
parted
select /dev/sdx
#CHECK THIS NOTE SYNCED BEFORE FORMATTING
mklabel gpt
mkpart ESP fat32 1MiB 1025MiB
set 1 esp on
mkpart primary ext4 1025MiB 100%
quit
mkfs.fat -F32 /dev/sdx1
mkfs.ext4 /dev/sdx2
mount /dev/sdx2 /mnt
mkdir /mnt/boot
mount /dev/sdx1 /mnt/boot
pacstrap /mnt base base-devel
genfstab -L /mnt >> /mnt/etc/fstab
#genfstab -U /mnt >> /mnt/etc/fstab
arch-chroot /mnt
ln -sf /usr/share/zoneinfo/America/New_York /etc/localtime
hwclock --systohc
sed -i '/^#en_US.UTF-8 UTF-8/s/^#//' /etc/locale.gen
sed -i '/^#en_US ISO-8859-1/s/^#//' /etc/locale.gen
locale-gen
echo 'LANG=en_US.UTF-8' | tee -a /etc/locale.conf
echo 'fcdcbda' > /etc/hostname
echo -e '127.0.0.1 localhost\n::1 localhost\n127.0.1.1 fcdcbda.localdomain fcdcbda' | tee -a /etc/hosts
#COMPLETE https://wiki.archlinux.org/index.php/Network_configuration HERE
mkinitcpio -p linux
passwd
#NOTE: for all pacman installs, if a package is already installed, (as a dependency for something else,) run "pacman -D --asexplicit package_name" to mark it as an explicit install.
#DON'T USE "pacman -S --asexplicit"; as that also marks any automatically added dependencies as explicitly installed.
pacman -Syu intel-ucode refind-efi
#above assuming you have an intel processor
#Your kernel and initramfs must reside on a file system that rEFInd can read. (Unencrypted Ext4, Btrfs, NTFS, FAT, etc.)
refind-install
bootctl --path=/boot install
exit
umount -R /mnt
poweroff
#remove install media

#power on
#login as root
timedatectl set-ntp true
systemctl --now enable dhcpcd.service
groupadd patrick
useradd -m -g patrick -s /bin/bash patricol
useradd -m -g patrick -s /bin/bash work
passwd patricol
passwd work
groupadd -r sudo
sed -i '/^# %sudo\tALL=(ALL) ALL/s/^# //' /etc/sudoers
usermod -aG sudo patricol
exit
#login as patricol
sudo passwd -l root
sudo pacman -Syu openssh
echo -e 'PermitRootLogin no\nAllowGroups ssh' | sudo tee -a /etc/ssh/sshd_config
sudo groupadd -r ssh
sudo usermod -aG ssh patricol
sudo systemctl --now enable sshd.service
ip address
exit

#login as patricol (can use ssh this time if desired.)
sudo pacman -Syu pigz pacman-contrib git vim
sudo -i
fallocate -l 16G /swapfile
#match size above to RAM installed.
chmod 600 /swapfile
mkswap /swapfile
swapon /swapfile
exit
sudo mkinitcpio -p linux
#handle any warnings thrown by that last command. can safely ignore missing aic94xx, wd719x, and smsmdtv

git clone https://aur.archlinux.org/yay.git
cd yay
makepkg -sci
cd ..
rm -rf ./yay/


#copy over the old home directory now. (use nas filezilla to upload it to arch etc.)
#check what's currently in /home before overwriting etc.
sudo tar --same-owner -xvpf /arch-homes.tar

curl -s "https://www.archlinux.org/mirrorlist/?country=US&country=CA&protocol=https&use_mirror_status=on" | sed -e "s/^#Server/Server/" -e "/^#/d" | rankmirrors -n 50 - | sudo tee /etc/pacman.d/mirrorlist

yay --needed -Syu $(cat /root/packages-explicit.txt /root/packages-dependencies.txt)
yay -D --asexplicit $(cat /root/packages-explicit.txt)
yay -D --asdeps $(cat /root/packages-dependencies.txt)

sudo git clone -b arch --bare https://github.com/Patricol/systemfiles.git /home/secure/systemfiles-repo
alias sysg='sudo git --git-dir=/home/secure/systemfiles-repo/ --work-tree=/'
sysg config --local status.showUntrackedFiles no
sysg checkout
(checkout -f to force, but first check in what they modify, for posterity and to make it easier to reapply changes on top of newer base configs. when done, remove this notice.)


sudo /root/bin/fix-permissions


Setup dotfiles if needed: https://github.com/Patricol/dotfiles


#exec startx for gui (assuming exec i3 is in ~/.xinitrc)

sudo systemctl --now disable dhcpcd.service
sudo systemctl --now enable fstrim.timer gpm.service docker.service paccache.timer libvirtd.service virtlogd.socket avahi-daemon.service avahi-daemon.socket NetworkManager.service bluetooth.service
sudo usermod -aG ssh libvirt
sudo reboot


sudo journalctl --vacuum-size=100M
sudo systemctl restart systemd-journald.service


sudo systemctl enable lightdm.service
sudo reboot

sudo systemctl mask hibernate.target suspend-then-hibernate.target hybrid-sleep.target suspend.target sleep.target
#disable hibernation and suspend. Sleep seems to be the same thing. DPMS and "screen blanking" are distinct from all of these.
#this also means there's no reason for me to use caffeine; I was using it to keep the computer from suspending when programs were running.

git clone https://github.com/Patricol/refind-material-theme.git
sudo mount /dev/sdx1 /boot/efi
sudo cp -r ./refind-material-theme/ /boot/efi/EFI/refind/
sudo rm -rf /boot/efi/EFI/refind/refind-material-theme/{src,.git}
rm -rf ./refind-material-theme/
sudo sed -i 's/^\([^#]\)/#\1/g' /boot/efi/EFI/refind/refind.conf
echo -e 'include refind-material-theme/theme.conf' | sudo tee -a /boot/efi/EFI/refind/refind.conf
sudo cp /usr/share/refind/drivers_x64/{btrfs_x64.efi,iso9660_x64.efi,ntfs_x64.efi} /boot/efi/EFI/refind/drivers_x64/
sudo umount /boot/efi

#regarding /etc/pacman.d/hooks/refind.hook, consider consequences of refind-install mounting the wrong efi partition. probably won't happen unless the correct one isn't on /dev/sda?

sudo mkinitcpio -p linux
sudo refind-install
sudo reboot


#If you didn't copy over files for atom:
#apm install atom-material-ui atom-material-syntax-dark atom-beautify file-icons language-docker angularjs react language-markdown linter linter-pylama linter-clang linter-gcc linter-cpplint advanced-open-file code-peek emmet fonts git-time-machine jumpy minimap sort-lines script todo-show pigments highlight-selected language-smali git-blame color-picker language-autohotkey2 dark-flat-ui
#open atom gui
#close atom gui
#apm disable git-blame color-picker spell-check minimap tree-view
#setup apm list saving what's installed so it can be backed up like the main packages.


#sets default terminal for nemo to use from right click menu etc.
gsettings set org.cinnamon.desktop.default-applications.terminal exec urxvt
#do that on work account too.

sudo systemctl enable --now run-regularly.timer run-weekly.timer run-on-boot.service
sudo /root/bin/run-regularly
sudo /root/bin/run-weekly

#MORE HARDWARE STUFF:
#Keep checking for when this supports AX860i: https://github.com/audiohacked/OpenCorsairLink
#https://wiki.archlinux.org/index.php/NVIDIA
sudo reboot
sudo nvidia-xconfig
#https://wiki.archlinux.org/index.php/NVIDIA#Automatic_configuration
#"If there are instances of DRI, ensure they are commented out"
#nvidia-settings to change settings etc.
#https://wiki.archlinux.org/index.php/Multihead
sudo systemctl --now enable nvidia-persistenced.service
#https://wiki.archlinux.org/index.php/Hardware_video_acceleration
sudo reboot


sudo groupadd -r bluetooth
sudo usermod -aG bluetooth patricol
#check: sudo chmod 644 /etc/polkit-1/rules.d/51-blueman.rules

#block access to che except from localhost.
sudo iptables -A INPUT -p tcp -s localhost --dport 8080 -j ACCEPT
sudo iptables -A INPUT -p tcp --dport 8080 -j DROP

sudo lightdm-settings
gcloud init

#add and trust private keys (including journal key) (use gpa)

poweroff

#reconnect any other ssds that were disconnected

#check pci devices/drivers with "lspci -k"
#test audio/headphones, microphone, and webcam
#setup vpn and wifi connections etc. test bluetooth. speakers and file transfer.
#check that hw acceleration works by using an avd. look at nvidia-settings gpu usage to be sure.
#setup vpn and wifi connections etc. test bluetooth. speakers and file transfer.

#setup chrome, deluge, duplicati, nemo, filezilla, gitkraken, atom, gpmdp, pycharm, android studio, quassel, remmina, signal, standard notes, vlc, VMs, i3, che.

#verify vdpau hardware acceleration is working by running vdpauinfo

xdpyinfo | grep -B2 resolution
#compare to https://www.sven.de/dpi/
#http://screen-size.info/
#https://wiki.archlinux.org/index.php/Xorg#Display_size_and_DPI

#can remove: /home/secure/config/etc/polkit-1/rules.d/51-blueman.rules
#can also remove /home/secure/bin etc.
#can delete /arch-homes.tar if you haven't already.

#check that duplicati is working again http://localhost:8200
